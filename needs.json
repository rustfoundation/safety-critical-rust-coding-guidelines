{"created": "2025-05-21T14:02:33.773711", "current_version": "", "project": "Safety-Critical Rust Coding Guidelines", "versions": {"": {"created": "2025-05-21T14:02:33.773700", "creator": {"program": "sphinx_needs", "version": "5.1.0"}, "needs": {"compl_ex_4VFyucETB7C3": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "(example of the same simple expansion using a declarative macro)\n\n.. code-block:: rust\n\n  // TODO", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "compl_ex_4VFyucETB7C3", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 83, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_66FSqzD55VRZ", "parent_needs": ["gui_66FSqzD55VRZ"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "compliant_example", "type_name": "Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "compl_ex_AEKEOYhBWPMl": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example.\n\n.. code-block:: rust\n\n  fn example_function() {\n      // Compliant implementation\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "compl_ex_AEKEOYhBWPMl", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 206, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_WJlWqgIxmE8P", "parent_needs": ["gui_WJlWqgIxmE8P"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "compliant_example", "type_name": "Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "compl_ex_GLP05s9c1g8N": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example.\n\n.. code-block:: rust\n\n  fn example_function() {\n      // Compliant implementation\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "compl_ex_GLP05s9c1g8N", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 332, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_8hs33nyp0ipX", "parent_needs": ["gui_8hs33nyp0ipX"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "compliant_example", "type_name": "Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "compl_ex_Mg8ePOgbGJeW": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example.\n\n.. code-block:: rust\n\n  fn example_function() {\n      // Compliant implementation\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "compl_ex_Mg8ePOgbGJeW", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 376, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_13XWp3mb0g2P", "parent_needs": ["gui_13XWp3mb0g2P"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "compliant_example", "type_name": "Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "compl_ex_Pw7YCh4Iv47Z": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example\n\n.. code-block:: rust\n\n  fn example_function() {\n      // Compliant implementation\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "compl_ex_Pw7YCh4Iv47Z", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 39, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_h0uG1C9ZjryA", "parent_needs": ["gui_h0uG1C9ZjryA"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "compliant_example", "type_name": "Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "compl_ex_W08ckDrkOhkt": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "We specify the concrete target types for our pointer casts resulting in a compilation error if the function signature of ``with_base`` is changed.\n\n.. code-block:: rust\n\n   #[repr(C)]\n   struct Base {\n      position: (u32, u32)\n   }\n\n   #[repr(C)]\n   struct Extended {\n      base: Base,\n      scale: f32\n   }\n\n   fn non_compliant_example(extended: &Extended) {\n      let extended = extended as *const Extended;\n      with_base(unsafe { &*(extended as *const Base) })\n   }\n\n   fn with_base(_: &Base) { ... }", "created_at": "", "decidability": "", "docname": "coding-guidelines/expressions", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "compl_ex_W08ckDrkOhkt", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 59, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_HDnAZ7EZ4z6G", "parent_needs": ["gui_HDnAZ7EZ4z6G"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Expressions", "sections": ["Expressions"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "compliant_example", "type_name": "Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "compl_ex_WTe7GoPu5Ez0": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": " .. code-block:: rust\n\n   fn calculate_next_position(current: u32, velocity: u32) -> u32 {\n       // Explicitly handle potential overflow with checked addition\n       current.checked_add(velocity).expect(\"Position calculation overflowed\")\n   }", "created_at": "", "decidability": "", "docname": "coding-guidelines/types-and-traits", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "compl_ex_WTe7GoPu5Ez0", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 55, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_xztNdXA2oFNB", "parent_needs": ["gui_xztNdXA2oFNB"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Types and Traits", "sections": ["Types and Traits"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "compliant_example", "type_name": "Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "compl_ex_cFPg6y7upNdl": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example.\n\n.. code-block:: rust\n\n  fn example_function() {\n      // Compliant implementation\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "compl_ex_cFPg6y7upNdl", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 290, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_uuDOArzyO3Qw", "parent_needs": ["gui_uuDOArzyO3Qw"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "compliant_example", "type_name": "Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "compl_ex_iPTgzrvO7qr3": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "The same functionality, implemented as a function with explicit borrowing:\n\n.. code-block:: rust\n\n  fn increment_and_double(x: &mut i32) -> i32 {\n      *x += 1; // mutation is explicit\n      *x * 2\n  }\n  let mut num = 5;\n  let result = increment_and_double(&mut num);\n  println!(\"Result: {}, Num: {}\", result, num);\n  // Result: 12, Num: 6\n\nThe function version makes the mutation and borrowing explicit in its signature, improving readability, safety, and debuggability.", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "compl_ex_iPTgzrvO7qr3", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 155, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_2jjWUoF1teOY", "parent_needs": ["gui_2jjWUoF1teOY"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "compliant_example", "type_name": "Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "compl_ex_pO5gP1aj2v4F": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example.\n\n.. code-block:: rust\n\n  fn example_function() {\n      // Compliant implementation\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "compl_ex_pO5gP1aj2v4F", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 418, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_FRLaMIMb4t3S", "parent_needs": ["gui_FRLaMIMb4t3S"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "compliant_example", "type_name": "Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "compl_ex_ti7GWHCOhUvT": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example.\n\n.. code-block:: rust\n\n  fn example_function() {\n      // Compliant implementation\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "compl_ex_ti7GWHCOhUvT", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 248, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_a1mHfjgKk4Xr", "parent_needs": ["gui_a1mHfjgKk4Xr"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "compliant_example", "type_name": "Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "compl_ex_xyaShvxL9JAM": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "The following is a macro refers to Vec using a global path. Even if there is a different struct called\n`Vec` defined in the scope of the macro usage, this macro will unambigiously use the `Vec` from the\nStandard Library.\n\n.. code-block:: rust\n\n  #[macro_export]\n  macro_rules! vec {\n      ( $( $x:expr ),* ) => {\n          {\n              let mut temp_vec = ::std::vec::Vec::new(); // global path\n              $(\n                  temp_vec.push($x);\n              )*\n              temp_vec\n          }\n      };\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "compl_ex_xyaShvxL9JAM", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 476, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_SJMrWDYZ0dN4", "parent_needs": ["gui_SJMrWDYZ0dN4"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "compliant_example", "type_name": "Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "gui_13XWp3mb0g2P": {"arch": {}, "avatar": "", "category": "required", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Attribute macros shall neither be declared nor invoked.\nPrefer less powerful macros that only extend source code.\n\n.. rationale::\n   :id: rat_X8uCF5yx7Mpo\n   :status: draft\n\n   Attribute macros are able to rewrite items entirely or in other unexpected ways which can cause confusion and introduce errors.\n\n.. non_compliant_example::\n   :id: non_compl_ex_eW374waRPbeL\n   :status: draft\n\n   Explanation of code example.\n\n   .. code-block:: rust\n\n     #[tokio::main]  // non-compliant\n     async fn main() {\n\n     }\n\n.. compliant_example::\n   :id: compl_ex_Mg8ePOgbGJeW\n   :status: draft\n\n   Explanation of code example.\n\n   .. code-block:: rust\n\n     fn example_function() {\n         // Compliant implementation\n     }", "created_at": "", "decidability": "decidable", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "fls_4vjbkm4ceymk", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "gui_13XWp3mb0g2P", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 344, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "", "parent_needs": [], "parent_needs_back": ["rat_X8uCF5yx7Mpo", "non_compl_ex_eW374waRPbeL", "compl_ex_Mg8ePOgbGJeW"], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "todo", "scope": "system", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": ["reduce-human-error"], "template": null, "title": "Attribute macros shall not be used", "type": "guideline", "type_name": "Guideline", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "gui_2jjWUoF1teOY": {"arch": {}, "avatar": "", "category": "mandatory", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Functions should always be preferred over macros, except when macros provide essential functionality that functions cannot, such as variadic interfaces, compile-time code generation, or syntax extensions via custom derive and attribute macros.\n\n|\n\n.. rationale::\n   :id: rat_M9bp23ctkzQ7\n   :status: draft\n\n   Macros are powerful but they come at the cost of readability, complexity, and maintainability. They obfuscate control flow and type signatures.\n\n   **Debugging Complexity**\n\n   - Errors point to expanded code rather than source locations, making it difficult to trace compile-time errors back to the original macro invocation.\n\n   **Optimization**\n\n   - Macros may inhibit compiler optimizations that work better with functions.\n   - Macros act like ``#[inline(always)]`` functions, which can lead to code bloat.\n   - They don't benefit from the compiler's inlining heuristics, missing out on selective inlining where the compiler decides when inlining is beneficial.\n\n   **Functions provide**\n\n   - Clear type signatures.\n   - Predictable behavior.\n   - Proper stack traces.\n   - Consistent optimization opportunities.\n\n\n.. non_compliant_example::\n   :id: non_compl_ex_TZgk2vG42t2r\n   :status: draft\n\n   Using a macro where a simple function would suffice, leads to hidden mutation:\n\n   .. code-block:: rust\n\n     macro_rules! increment_and_double {\n         ($x:expr) => {\n             {\n                 $x += 1; // mutation is implicit\n                 $x * 2\n             }\n         };\n     }\n     let mut num = 5;\n     let result = increment_and_double!(num);\n     println!(\"Result: {}, Num: {}\", result, num);\n     // Result: 12, Num: 6\n\n   In this example, calling the macro both increments and returns the value in one go\u2014without any clear indication in its \u201csignature\u201d that it mutates its argument. As a result, num is changed behind the scenes, which can surprise readers and make debugging more difficult.\n\n\n.. compliant_example::\n   :id: compl_ex_iPTgzrvO7qr3\n   :status: draft\n\n   The same functionality, implemented as a function with explicit borrowing:\n\n   .. code-block:: rust\n\n     fn increment_and_double(x: &mut i32) -> i32 {\n         *x += 1; // mutation is explicit\n         *x * 2\n     }\n     let mut num = 5;\n     let result = increment_and_double(&mut num);\n     println!(\"Result: {}, Num: {}\", result, num);\n     // Result: 12, Num: 6\n\n   The function version makes the mutation and borrowing explicit in its signature, improving readability, safety, and debuggability.", "created_at": "", "decidability": "decidable", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "fls_xa7lp0zg1ol2", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "gui_2jjWUoF1teOY", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 93, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "", "parent_needs": [], "parent_needs_back": ["rat_M9bp23ctkzQ7", "non_compl_ex_TZgk2vG42t2r", "compl_ex_iPTgzrvO7qr3"], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "todo", "scope": "system", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": ["reduce-human-error"], "template": null, "title": "A macro should not be used in place of a function", "type": "guideline", "type_name": "Guideline", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "gui_66FSqzD55VRZ": {"arch": {}, "avatar": "", "category": "advisory", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Macros should be expressed using declarative syntax\nin preference to procedural syntax.\n\n.. rationale::\n   :id: rat_AmCavSymv3Ev\n   :status: draft\n\n   Procedural macros are not restricted to pure transcription and can contain arbitrary Rust code.\n   This means they can be harder to understand, and cannot be as easily proved to work as intended.\n   Procedural macros can have arbitrary side effects, which can exhaust compiler resources or\n   expose a vulnerability for users of adopted code.\n\n.. non_compliant_example::\n   :id: non_compl_ex_pJhVZW6a1HP9\n   :status: draft\n\n   (example of a simple expansion using a proc-macro)\n\n   .. code-block:: rust\n\n     // TODO\n\n.. compliant_example::\n   :id: compl_ex_4VFyucETB7C3\n   :status: draft\n\n   (example of the same simple expansion using a declarative macro)\n\n   .. code-block:: rust\n\n     // TODO", "created_at": "", "decidability": "decidable", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "fls_wn1i6hzg2ff7", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "gui_66FSqzD55VRZ", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 51, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "", "parent_needs": [], "parent_needs_back": ["rat_AmCavSymv3Ev", "non_compl_ex_pJhVZW6a1HP9", "compl_ex_4VFyucETB7C3"], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "1.85.0;1.85.1", "scope": "crate", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": ["readability", "reduce-human-error"], "template": null, "title": "Procedural macros should not be used", "type": "guideline", "type_name": "Guideline", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "gui_8hs33nyp0ipX": {"arch": {}, "avatar": "", "category": "mandatory", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Description of the guideline goes here.\n\n.. rationale::\n   :id: rat_e9iS187skbHH\n   :status: draft\n\n   Explanation of why this guideline is important.\n\n.. non_compliant_example::\n   :id: non_compl_ex_lRt4LBen6Lkc\n   :status: draft\n\n   Explanation of code example.\n\n   .. code-block:: rust\n\n     fn example_function() {\n         // Non-compliant implementation\n     }\n\n.. compliant_example::\n   :id: compl_ex_GLP05s9c1g8N\n   :status: draft\n\n   Explanation of code example.\n\n   .. code-block:: rust\n\n     fn example_function() {\n         // Compliant implementation\n     }", "created_at": "", "decidability": "decidable", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "fls_xlfo7di0gsqz", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "gui_8hs33nyp0ipX", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 302, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "", "parent_needs": [], "parent_needs_back": ["rat_e9iS187skbHH", "non_compl_ex_lRt4LBen6Lkc", "compl_ex_GLP05s9c1g8N"], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "todo", "scope": "system", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": ["reduce-human-error"], "template": null, "title": "Shall ensure complete hygiene of macros", "type": "guideline", "type_name": "Guideline", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "gui_FRLaMIMb4t3S": {"arch": {}, "avatar": "", "category": "required", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Description of the guideline goes here.\n\n.. rationale::\n   :id: rat_WJubG7KuUDLW\n   :status: draft\n\n   Explanation of why this guideline is important.\n\n.. non_compliant_example::\n   :id: non_compl_ex_AyFnP0lJLHxi\n   :status: draft\n\n   Explanation of code example.\n\n   .. code-block:: rust\n\n     fn example_function() {\n         // Non-compliant implementation\n     }\n\n.. compliant_example::\n   :id: compl_ex_pO5gP1aj2v4F\n   :status: draft\n\n   Explanation of code example.\n\n   .. code-block:: rust\n\n     fn example_function() {\n         // Compliant implementation\n     }", "created_at": "", "decidability": "todo", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "fls_4vjbkm4ceymk", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "gui_FRLaMIMb4t3S", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 388, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "", "parent_needs": [], "parent_needs_back": ["rat_WJubG7KuUDLW", "non_compl_ex_AyFnP0lJLHxi", "compl_ex_pO5gP1aj2v4F"], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "todo", "scope": "todo", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": ["reduce-human-error"], "template": null, "title": "Do not hide unsafe blocks within macro expansions", "type": "guideline", "type_name": "Guideline", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "gui_HDnAZ7EZ4z6G": {"arch": {}, "avatar": "", "category": "required", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Code must not rely on Rust's type inference when doing explicit pointer casts via ``var as Type`` or ``core::mem::transmute``.\nInstead, explicitly specify the complete target type in the ``as`` expression or ``core::mem::transmute`` call expression.\n\n.. rationale::\n   :id: rat_h8LdJQ1MNKu9\n   :status: draft\n\n   ``var as Type`` casts and ``core::mem::transmute``\\s between raw pointer types are generally valid and unchecked by the compiler as long the target pointer type is a thin pointer.\n   Not specifying the concrete target pointer type allows the compiler to infer it from the surroundings context which may result in the cast accidentally changing due to surrounding type changes resulting in semantically invalid pointer casts.\n\n   Raw pointers have a variety of invariants to manually keep track of.\n   Specifying the concrete types in these scenarios allows the compiler to catch some of these potential issues for the user.\n\n.. non_compliant_example::\n   :id: non_compl_ex_V37Pl103aUW4\n   :status: draft\n\n   The following code leaves it up to type inference to figure out the concrete types of the raw pointer casts, allowing changes to ``with_base``'s function signature to affect the types the function body of ``non_compliant_example`` without incurring a compiler error.\n\n   .. code-block:: rust\n\n      #[repr(C)]\n      struct Base {\n         position: (u32, u32)\n      }\n\n      #[repr(C)]\n      struct Extended {\n         base: Base,\n         scale: f32\n      }\n\n      fn non_compliant_example(extended: &Extended) {\n         let extended = extended as *const _;\n         with_base(unsafe { &*(extended as *const _) })\n      }\n\n      fn with_base(_: &Base) { ... }\n\n.. compliant_example::\n   :id: compl_ex_W08ckDrkOhkt\n   :status: draft\n\n   We specify the concrete target types for our pointer casts resulting in a compilation error if the function signature of ``with_base`` is changed.\n\n   .. code-block:: rust\n\n      #[repr(C)]\n      struct Base {\n         position: (u32, u32)\n      }\n\n      #[repr(C)]\n      struct Extended {\n         base: Base,\n         scale: f32\n      }\n\n      fn non_compliant_example(extended: &Extended) {\n         let extended = extended as *const Extended;\n         with_base(unsafe { &*(extended as *const Base) })\n      }\n\n      fn with_base(_: &Base) { ... }", "created_at": "", "decidability": "decidable", "docname": "coding-guidelines/expressions", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "fls_1qhsun1vyarz", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "gui_HDnAZ7EZ4z6G", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 10, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "", "parent_needs": [], "parent_needs_back": ["rat_h8LdJQ1MNKu9", "non_compl_ex_V37Pl103aUW4", "compl_ex_W08ckDrkOhkt"], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "<TODO>", "scope": "module", "section_name": "Expressions", "sections": ["Expressions"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": ["readability", "reduce-human-error"], "template": null, "title": "Avoid as underscore pointer casts", "type": "guideline", "type_name": "Guideline", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "gui_SJMrWDYZ0dN4": {"arch": {}, "avatar": "", "category": "required", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Each name inside of the definition of a macro shall either use a global path or path prefixed with $crate.\n\n.. rationale::\n   :id: rat_VRNXaxmW1l2s\n   :status: draft\n\n   Using a path that refers to an entity relatively inside of a macro subjects it to path resolution\n   results which may change depending on where the macro is used. The intended path to refer to an entity\n   can be shadowed when using a macro leading to unexpected behaviors. This could lead to developer confusion\n   about why a macro behaves differently in diffenent locations, or confusion about where entity in a macro\n   will resolve to.\n\n.. non_compliant_example::\n   :id: non_compl_ex_m2XR1ihTbCQS\n   :status: draft\n\n   The following is a macro which shows referring to a vector entity using a non-global path. Depending on\n   where the macro is used a different `Vec` could be used than is intended. If scope where this is used\n   defines a struct `Vec` which is not preset at the macro defintion, the macro user might be intending to\n   use that in the macro.\n\n   .. code-block:: rust\n\n     #[macro_export]\n     macro_rules! vec {\n         ( $( $x:expr ),* ) => {\n             {\n                 let mut temp_vec = Vec::new(); // non-global path\n                 $(\n                     temp_vec.push($x);\n                 )*\n                 temp_vec\n             }\n         };\n     }\n\n.. compliant_example::\n   :id: compl_ex_xyaShvxL9JAM\n   :status: draft\n\n   The following is a macro refers to Vec using a global path. Even if there is a different struct called\n   `Vec` defined in the scope of the macro usage, this macro will unambigiously use the `Vec` from the\n   Standard Library.\n\n   .. code-block:: rust\n\n     #[macro_export]\n     macro_rules! vec {\n         ( $( $x:expr ),* ) => {\n             {\n                 let mut temp_vec = ::std::vec::Vec::new(); // global path\n                 $(\n                     temp_vec.push($x);\n                 )*\n                 temp_vec\n             }\n         };\n     }", "created_at": "", "decidability": "decidable", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "fls_7kb6ltajgiou", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "gui_SJMrWDYZ0dN4", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 430, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "", "parent_needs": [], "parent_needs_back": ["rat_VRNXaxmW1l2s", "non_compl_ex_m2XR1ihTbCQS", "compl_ex_xyaShvxL9JAM"], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "1.85.0;1.85.1", "scope": "module", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": ["reduce-human-error"], "template": null, "title": "Names in a macro definition shall use a fully qualified path", "type": "guideline", "type_name": "Guideline", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "gui_WJlWqgIxmE8P": {"arch": {}, "avatar": "", "category": "mandatory", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Description of the guideline goes here.\n\n.. rationale::\n   :id: rat_C8RRidiVzhRj\n   :status: draft\n\n   Explanation of why this guideline is important.\n\n.. non_compliant_example::\n   :id: non_compl_ex_TjRiRkmBY6wG\n   :status: draft\n\n   Explanation of code example.\n\n   .. code-block:: rust\n\n     fn example_function() {\n         // Non-compliant implementation\n     }\n\n.. compliant_example::\n   :id: compl_ex_AEKEOYhBWPMl\n   :status: draft\n\n   Explanation of code example.\n\n   .. code-block:: rust\n\n     fn example_function() {\n         // Compliant implementation\n     }", "created_at": "", "decidability": "decidable", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "fls_utd3zqczix", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "gui_WJlWqgIxmE8P", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 176, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "", "parent_needs": [], "parent_needs_back": ["rat_C8RRidiVzhRj", "non_compl_ex_TjRiRkmBY6wG", "compl_ex_AEKEOYhBWPMl"], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "todo", "scope": "system", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": ["reduce-human-error"], "template": null, "title": "Shall not use Function-like Macros", "type": "guideline", "type_name": "Guideline", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "gui_a1mHfjgKk4Xr": {"arch": {}, "avatar": "", "category": "mandatory", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Description of the guideline goes here.\n\n.. rationale::\n   :id: rat_62mSorNF05kD\n   :status: draft\n\n   Explanation of why this guideline is important.\n\n.. non_compliant_example::\n   :id: non_compl_ex_hP5KLhqQfDcd\n   :status: draft\n\n   Explanation of code example.\n\n   .. code-block:: rust\n\n     fn example_function() {\n         // Non-compliant implementation\n     }\n\n.. compliant_example::\n   :id: compl_ex_ti7GWHCOhUvT\n   :status: draft\n\n   Explanation of code example.\n\n   .. code-block:: rust\n\n     fn example_function() {\n         // Compliant implementation\n     }", "created_at": "", "decidability": "decidable", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "fls_vnvt40pa48n8", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "gui_a1mHfjgKk4Xr", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 218, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "", "parent_needs": [], "parent_needs_back": ["rat_62mSorNF05kD", "non_compl_ex_hP5KLhqQfDcd", "compl_ex_ti7GWHCOhUvT"], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "todo", "scope": "system", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": ["reduce-human-error"], "template": null, "title": "Shall not invoke macros", "type": "guideline", "type_name": "Guideline", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "gui_h0uG1C9ZjryA": {"arch": {}, "avatar": "", "category": "mandatory", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Description of the guideline goes here.\n\n.. rationale::\n   :id: rat_U3AEUPyaUhcb\n   :status: draft\n\n   Explanation of why this guideline is important.\n\n.. non_compliant_example::\n   :id: non_compl_ex_Gb4zimei8cNI\n   :status: draft\n\n   Explanation of code example.\n\n   .. code-block:: rust\n\n     fn example_function() {\n         // Non-compliant implementation\n     }\n\n.. compliant_example::\n   :id: compl_ex_Pw7YCh4Iv47Z\n   :status: draft\n\n   Explanation of code example\n\n   .. code-block:: rust\n\n     fn example_function() {\n         // Compliant implementation\n     }", "created_at": "", "decidability": "decidable", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "fls_xa7lp0zg1ol2", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "gui_h0uG1C9ZjryA", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 9, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "", "parent_needs": [], "parent_needs_back": ["rat_U3AEUPyaUhcb", "non_compl_ex_Gb4zimei8cNI", "compl_ex_Pw7YCh4Iv47Z"], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "todo", "scope": "system", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": ["reduce-human-error"], "template": null, "title": "Shall not use Declarative Macros", "type": "guideline", "type_name": "Guideline", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "gui_uuDOArzyO3Qw": {"arch": {}, "avatar": "", "category": "mandatory", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Description of the guideline goes here.\n\n.. rationale::\n   :id: rat_dNgSvC0SZ3JJ\n   :status: draft\n\n   Explanation of why this guideline is important.\n\n.. non_compliant_example::\n   :id: non_compl_ex_g9j8shyGM2Rh\n   :status: draft\n\n   Explanation of code example.\n\n   .. code-block:: rust\n\n     fn example_function() {\n         // Non-compliant implementation\n     }\n\n.. compliant_example::\n   :id: compl_ex_cFPg6y7upNdl\n   :status: draft\n\n   Explanation of code example.\n\n   .. code-block:: rust\n\n     fn example_function() {\n         // Compliant implementation\n     }", "created_at": "", "decidability": "decidable", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "fls_wjldgtio5o75", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "gui_uuDOArzyO3Qw", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 260, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "", "parent_needs": [], "parent_needs_back": ["rat_dNgSvC0SZ3JJ", "non_compl_ex_g9j8shyGM2Rh", "compl_ex_cFPg6y7upNdl"], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "todo", "scope": "system", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": ["reduce-human-error"], "template": null, "title": "Shall not write code that expands macros", "type": "guideline", "type_name": "Guideline", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "gui_xztNdXA2oFNB": {"arch": {}, "avatar": "", "category": "required", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Code must not rely on Rust's implicit integer wrapping behavior that may occur in release\nbuilds. Instead, explicitly handle potential overflows using the standard library's checked,\nsaturating, or wrapping operations.\n\n.. rationale::\n   :id: rat_kYiIiW8R2qD1\n   :status: draft\n\n   In debug builds, Rust performs runtime checks for integer overflow and will panic if detected.\n   However, in release builds (with optimizations enabled), unless the flag `overflow-checks`_ is\n   turned on, integer operations silently wrap around on overflow, creating potential for silent\n   failures and security vulnerabilities. Note that overflow-checks only brings the default panic\n   behavior from debug into release builds, avoiding potential silent wrap arounds. Nonetheless,\n   abrupt program termination is usually not suitable and, therefore, turning this flag on must\n   not be used as a substitute of explicit handling. Furthermore, the behavior in release mode is\n   under consideration by the The Rust Language Design Team and in the future overflow checking\n   may be turned on by default in release builds (it is a `frequently requested change`_).\n\n   .. _overflow-checks: https://github.com/rust-lang/rust/blob/master/src/doc/rustc/src/codegen-options/index.md#overflow-checks\n   .. _frequently requested change: https://lang-team.rust-lang.org/frequently-requested-changes.html#numeric-overflow-checking-should-be-on-by-default-even-in-release-mode\n\n   Safety-critical software requires consistent and predictable behavior across all build\n   configurations. Explicit handling of potential overflow conditions improves code clarity,\n   maintainability, and reduces the risk of numerical errors in production.\n\n.. non_compliant_example::\n   :id: non_compl_ex_PO5TyFsRTlWv\n   :status: draft\n\n    .. code-block:: rust\n\n      fn calculate_next_position(current: u32, velocity: u32) -> u32 {\n          // Potential for silent overflow in release builds\n          current + velocity\n      }\n\n.. compliant_example::\n   :id: compl_ex_WTe7GoPu5Ez0\n   :status: draft\n\n    .. code-block:: rust\n\n      fn calculate_next_position(current: u32, velocity: u32) -> u32 {\n          // Explicitly handle potential overflow with checked addition\n          current.checked_add(velocity).expect(\"Position calculation overflowed\")\n      }", "created_at": "", "decidability": "decidable", "docname": "coding-guidelines/types-and-traits", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "fls_cokwseo3nnr", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "gui_xztNdXA2oFNB", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 9, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "", "parent_needs": [], "parent_needs_back": ["rat_kYiIiW8R2qD1", "non_compl_ex_PO5TyFsRTlWv", "compl_ex_WTe7GoPu5Ez0"], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "1.85.0;1.85.1", "scope": "module", "section_name": "Types and Traits", "sections": ["Types and Traits"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": ["numerics"], "template": null, "title": "Avoid Implicit Integer Wrapping", "type": "guideline", "type_name": "Guideline", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "non_compl_ex_AyFnP0lJLHxi": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example.\n\n.. code-block:: rust\n\n  fn example_function() {\n      // Non-compliant implementation\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "non_compl_ex_AyFnP0lJLHxi", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 406, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_FRLaMIMb4t3S", "parent_needs": ["gui_FRLaMIMb4t3S"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "non_compliant_example", "type_name": "Non-Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "non_compl_ex_Gb4zimei8cNI": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example.\n\n.. code-block:: rust\n\n  fn example_function() {\n      // Non-compliant implementation\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "non_compl_ex_Gb4zimei8cNI", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 27, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_h0uG1C9ZjryA", "parent_needs": ["gui_h0uG1C9ZjryA"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "non_compliant_example", "type_name": "Non-Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "non_compl_ex_PO5TyFsRTlWv": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": " .. code-block:: rust\n\n   fn calculate_next_position(current: u32, velocity: u32) -> u32 {\n       // Potential for silent overflow in release builds\n       current + velocity\n   }", "created_at": "", "decidability": "", "docname": "coding-guidelines/types-and-traits", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "non_compl_ex_PO5TyFsRTlWv", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 44, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_xztNdXA2oFNB", "parent_needs": ["gui_xztNdXA2oFNB"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Types and Traits", "sections": ["Types and Traits"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "non_compliant_example", "type_name": "Non-Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "non_compl_ex_TZgk2vG42t2r": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Using a macro where a simple function would suffice, leads to hidden mutation:\n\n.. code-block:: rust\n\n  macro_rules! increment_and_double {\n      ($x:expr) => {\n          {\n              $x += 1; // mutation is implicit\n              $x * 2\n          }\n      };\n  }\n  let mut num = 5;\n  let result = increment_and_double!(num);\n  println!(\"Result: {}, Num: {}\", result, num);\n  // Result: 12, Num: 6\n\nIn this example, calling the macro both increments and returns the value in one go\u2014without any clear indication in its \u201csignature\u201d that it mutates its argument. As a result, num is changed behind the scenes, which can surprise readers and make debugging more difficult.", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "non_compl_ex_TZgk2vG42t2r", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 131, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_2jjWUoF1teOY", "parent_needs": ["gui_2jjWUoF1teOY"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "non_compliant_example", "type_name": "Non-Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "non_compl_ex_TjRiRkmBY6wG": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example.\n\n.. code-block:: rust\n\n  fn example_function() {\n      // Non-compliant implementation\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "non_compl_ex_TjRiRkmBY6wG", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 194, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_WJlWqgIxmE8P", "parent_needs": ["gui_WJlWqgIxmE8P"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "non_compliant_example", "type_name": "Non-Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "non_compl_ex_V37Pl103aUW4": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "The following code leaves it up to type inference to figure out the concrete types of the raw pointer casts, allowing changes to ``with_base``'s function signature to affect the types the function body of ``non_compliant_example`` without incurring a compiler error.\n\n.. code-block:: rust\n\n   #[repr(C)]\n   struct Base {\n      position: (u32, u32)\n   }\n\n   #[repr(C)]\n   struct Extended {\n      base: Base,\n      scale: f32\n   }\n\n   fn non_compliant_example(extended: &Extended) {\n      let extended = extended as *const _;\n      with_base(unsafe { &*(extended as *const _) })\n   }\n\n   fn with_base(_: &Base) { ... }", "created_at": "", "decidability": "", "docname": "coding-guidelines/expressions", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "non_compl_ex_V37Pl103aUW4", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 33, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_HDnAZ7EZ4z6G", "parent_needs": ["gui_HDnAZ7EZ4z6G"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Expressions", "sections": ["Expressions"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "non_compliant_example", "type_name": "Non-Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "non_compl_ex_eW374waRPbeL": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example.\n\n.. code-block:: rust\n\n  #[tokio::main]  // non-compliant\n  async fn main() {\n\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "non_compl_ex_eW374waRPbeL", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 363, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_13XWp3mb0g2P", "parent_needs": ["gui_13XWp3mb0g2P"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "non_compliant_example", "type_name": "Non-Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "non_compl_ex_g9j8shyGM2Rh": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example.\n\n.. code-block:: rust\n\n  fn example_function() {\n      // Non-compliant implementation\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "non_compl_ex_g9j8shyGM2Rh", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 278, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_uuDOArzyO3Qw", "parent_needs": ["gui_uuDOArzyO3Qw"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "non_compliant_example", "type_name": "Non-Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "non_compl_ex_hP5KLhqQfDcd": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example.\n\n.. code-block:: rust\n\n  fn example_function() {\n      // Non-compliant implementation\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "non_compl_ex_hP5KLhqQfDcd", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 236, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_a1mHfjgKk4Xr", "parent_needs": ["gui_a1mHfjgKk4Xr"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "non_compliant_example", "type_name": "Non-Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "non_compl_ex_lRt4LBen6Lkc": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of code example.\n\n.. code-block:: rust\n\n  fn example_function() {\n      // Non-compliant implementation\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "non_compl_ex_lRt4LBen6Lkc", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 320, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_8hs33nyp0ipX", "parent_needs": ["gui_8hs33nyp0ipX"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "non_compliant_example", "type_name": "Non-Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "non_compl_ex_m2XR1ihTbCQS": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "The following is a macro which shows referring to a vector entity using a non-global path. Depending on\nwhere the macro is used a different `Vec` could be used than is intended. If scope where this is used\ndefines a struct `Vec` which is not preset at the macro defintion, the macro user might be intending to\nuse that in the macro.\n\n.. code-block:: rust\n\n  #[macro_export]\n  macro_rules! vec {\n      ( $( $x:expr ),* ) => {\n          {\n              let mut temp_vec = Vec::new(); // non-global path\n              $(\n                  temp_vec.push($x);\n              )*\n              temp_vec\n          }\n      };\n  }", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "non_compl_ex_m2XR1ihTbCQS", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 452, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_SJMrWDYZ0dN4", "parent_needs": ["gui_SJMrWDYZ0dN4"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "non_compliant_example", "type_name": "Non-Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "non_compl_ex_pJhVZW6a1HP9": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "(example of a simple expansion using a proc-macro)\n\n.. code-block:: rust\n\n  // TODO", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "non_compl_ex_pJhVZW6a1HP9", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 73, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_66FSqzD55VRZ", "parent_needs": ["gui_66FSqzD55VRZ"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "non_compliant_example", "type_name": "Non-Compliant Example", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "rat_62mSorNF05kD": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of why this guideline is important.", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "rat_62mSorNF05kD", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 230, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_a1mHfjgKk4Xr", "parent_needs": ["gui_a1mHfjgKk4Xr"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "rationale", "type_name": "Rationale", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "rat_AmCavSymv3Ev": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Procedural macros are not restricted to pure transcription and can contain arbitrary Rust code.\nThis means they can be harder to understand, and cannot be as easily proved to work as intended.\nProcedural macros can have arbitrary side effects, which can exhaust compiler resources or\nexpose a vulnerability for users of adopted code.", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "rat_AmCavSymv3Ev", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 64, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_66FSqzD55VRZ", "parent_needs": ["gui_66FSqzD55VRZ"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "rationale", "type_name": "Rationale", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "rat_C8RRidiVzhRj": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of why this guideline is important.", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "rat_C8RRidiVzhRj", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 188, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_WJlWqgIxmE8P", "parent_needs": ["gui_WJlWqgIxmE8P"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "rationale", "type_name": "Rationale", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "rat_M9bp23ctkzQ7": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Macros are powerful but they come at the cost of readability, complexity, and maintainability. They obfuscate control flow and type signatures.\n\n**Debugging Complexity**\n\n- Errors point to expanded code rather than source locations, making it difficult to trace compile-time errors back to the original macro invocation.\n\n**Optimization**\n\n- Macros may inhibit compiler optimizations that work better with functions.\n- Macros act like ``#[inline(always)]`` functions, which can lead to code bloat.\n- They don't benefit from the compiler's inlining heuristics, missing out on selective inlining where the compiler decides when inlining is beneficial.\n\n**Functions provide**\n\n- Clear type signatures.\n- Predictable behavior.\n- Proper stack traces.\n- Consistent optimization opportunities.", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "rat_M9bp23ctkzQ7", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 107, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_2jjWUoF1teOY", "parent_needs": ["gui_2jjWUoF1teOY"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "rationale", "type_name": "Rationale", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "rat_U3AEUPyaUhcb": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of why this guideline is important.", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "rat_U3AEUPyaUhcb", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 21, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_h0uG1C9ZjryA", "parent_needs": ["gui_h0uG1C9ZjryA"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "rationale", "type_name": "Rationale", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "rat_VRNXaxmW1l2s": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Using a path that refers to an entity relatively inside of a macro subjects it to path resolution\nresults which may change depending on where the macro is used. The intended path to refer to an entity\ncan be shadowed when using a macro leading to unexpected behaviors. This could lead to developer confusion\nabout why a macro behaves differently in diffenent locations, or confusion about where entity in a macro\nwill resolve to.", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "rat_VRNXaxmW1l2s", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 442, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_SJMrWDYZ0dN4", "parent_needs": ["gui_SJMrWDYZ0dN4"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "rationale", "type_name": "Rationale", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "rat_WJubG7KuUDLW": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of why this guideline is important.", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "rat_WJubG7KuUDLW", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 400, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_FRLaMIMb4t3S", "parent_needs": ["gui_FRLaMIMb4t3S"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "rationale", "type_name": "Rationale", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "rat_X8uCF5yx7Mpo": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Attribute macros are able to rewrite items entirely or in other unexpected ways which can cause confusion and introduce errors.", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "rat_X8uCF5yx7Mpo", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 357, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_13XWp3mb0g2P", "parent_needs": ["gui_13XWp3mb0g2P"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "rationale", "type_name": "Rationale", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "rat_dNgSvC0SZ3JJ": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of why this guideline is important.", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "rat_dNgSvC0SZ3JJ", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 272, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_uuDOArzyO3Qw", "parent_needs": ["gui_uuDOArzyO3Qw"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "rationale", "type_name": "Rationale", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "rat_e9iS187skbHH": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "Explanation of why this guideline is important.", "created_at": "", "decidability": "", "docname": "coding-guidelines/macros", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "rat_e9iS187skbHH", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 314, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_8hs33nyp0ipX", "parent_needs": ["gui_8hs33nyp0ipX"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Macros", "sections": ["Macros"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "rationale", "type_name": "Rationale", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "rat_h8LdJQ1MNKu9": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "``var as Type`` casts and ``core::mem::transmute``\\s between raw pointer types are generally valid and unchecked by the compiler as long the target pointer type is a thin pointer.\nNot specifying the concrete target pointer type allows the compiler to infer it from the surroundings context which may result in the cast accidentally changing due to surrounding type changes resulting in semantically invalid pointer casts.\n\nRaw pointers have a variety of invariants to manually keep track of.\nSpecifying the concrete types in these scenarios allows the compiler to catch some of these potential issues for the user.", "created_at": "", "decidability": "", "docname": "coding-guidelines/expressions", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "rat_h8LdJQ1MNKu9", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 23, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_HDnAZ7EZ4z6G", "parent_needs": ["gui_HDnAZ7EZ4z6G"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Expressions", "sections": ["Expressions"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "rationale", "type_name": "Rationale", "updated_at": "", "url": "", "url_postfix": "", "user": ""}, "rat_kYiIiW8R2qD1": {"arch": {}, "avatar": "", "category": "", "closed_at": "", "completion": "", "constraints": [], "constraints_passed": true, "constraints_results": {}, "content": "In debug builds, Rust performs runtime checks for integer overflow and will panic if detected.\nHowever, in release builds (with optimizations enabled), unless the flag `overflow-checks`_ is\nturned on, integer operations silently wrap around on overflow, creating potential for silent\nfailures and security vulnerabilities. Note that overflow-checks only brings the default panic\nbehavior from debug into release builds, avoiding potential silent wrap arounds. Nonetheless,\nabrupt program termination is usually not suitable and, therefore, turning this flag on must\nnot be used as a substitute of explicit handling. Furthermore, the behavior in release mode is\nunder consideration by the The Rust Language Design Team and in the future overflow checking\nmay be turned on by default in release builds (it is a `frequently requested change`_).\n\n.. _overflow-checks: https://github.com/rust-lang/rust/blob/master/src/doc/rustc/src/codegen-options/index.md#overflow-checks\n.. _frequently requested change: https://lang-team.rust-lang.org/frequently-requested-changes.html#numeric-overflow-checking-should-be-on-by-default-even-in-release-mode\n\nSafety-critical software requires consistent and predictable behavior across all build\nconfigurations. Explicit handling of potential overflow conditions improves code clarity,\nmaintainability, and reduces the risk of numerical errors in production.", "created_at": "", "decidability": "", "docname": "coding-guidelines/types-and-traits", "doctype": ".rst", "duration": "", "external_css": "external_link", "external_url": null, "fls": "", "has_dead_links": false, "has_forbidden_dead_links": false, "id": "rat_kYiIiW8R2qD1", "id_prefix": "", "is_external": false, "is_modified": false, "is_need": true, "is_part": false, "jinja_content": false, "layout": "", "lineno": 23, "links": [], "links_back": [], "max_amount": "", "max_content_lines": "", "modifications": 0, "params": "", "parent_need": "gui_xztNdXA2oFNB", "parent_needs": ["gui_xztNdXA2oFNB"], "parent_needs_back": [], "parts": {}, "post_template": null, "pre_template": null, "prefix": "", "query": "", "recommendation": "", "release": "", "scope": "", "section_name": "Types and Traits", "sections": ["Types and Traits"], "service": "", "signature": "", "specific": "", "status": "draft", "style": null, "tags": [], "template": null, "title": "", "type": "rationale", "type_name": "Rationale", "updated_at": "", "url": "", "url_postfix": "", "user": ""}}, "needs_amount": 48, "needs_schema": {"$schema": "http://json-schema.org/draft-07/schema#", "properties": {"arch": {"additionalProperties": {"type": "string"}, "default": {}, "description": "Mapping of uml key to uml content.", "field_type": "core", "type": "object"}, "avatar": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "category": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "closed_at": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "completion": {"default": "", "description": "Added for needgantt functionality", "field_type": "extra", "type": "string"}, "constraints": {"default": [], "description": "List of constraint names, which are defined for this need.", "field_type": "core", "items": {"type": "string"}, "type": "array"}, "constraints_error": {"default": "", "description": "An error message set if any constraint failed, and `error_message` field is set in config.", "field_type": "core", "type": "string"}, "constraints_passed": {"default": true, "description": "True if all constraints passed, False if any failed, None if not yet checked.", "field_type": "core", "type": "boolean"}, "constraints_results": {"additionalProperties": {"type": "object"}, "default": {}, "description": "Mapping of constraint name, to check name, to result.", "field_type": "core", "type": "object"}, "content": {"default": "", "description": "Content of the need.", "field_type": "core", "type": "string"}, "created_at": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "decidability": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "docname": {"default": null, "description": "Name of the document where the need is defined (None if external).", "field_type": "core", "type": ["string", "null"]}, "doctype": {"default": ".rst", "description": "Type of the document where the need is defined, e.g. '.rst'.", "field_type": "core", "type": "string"}, "duration": {"default": "", "description": "Added for needgantt functionality", "field_type": "extra", "type": "string"}, "external_css": {"default": "", "description": "CSS class name, added to the external reference.", "field_type": "core", "type": "string"}, "external_url": {"default": null, "description": "URL of the need, if it is an external need.", "field_type": "core", "type": ["string", "null"]}, "fls": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "has_dead_links": {"default": false, "description": "True if any links reference need ids that are not found in the need list.", "field_type": "core", "type": "boolean"}, "has_forbidden_dead_links": {"default": false, "description": "True if any links reference need ids that are not found in the need list, and the link type does not allow dead links.", "field_type": "core", "type": "boolean"}, "id": {"description": "ID of the data.", "field_type": "core", "type": "string"}, "id_prefix": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "is_external": {"default": false, "description": "If true, no node is created and need is referencing external url.", "field_type": "core", "type": "boolean"}, "is_modified": {"default": false, "description": "Whether the need was modified by needextend.", "field_type": "core", "type": "boolean"}, "is_need": {"default": true, "description": "Whether the need is a need.", "field_type": "core", "type": "boolean"}, "is_part": {"default": false, "description": "Whether the need is a part.", "field_type": "core", "type": "boolean"}, "jinja_content": {"default": false, "description": "Whether the content should be pre-processed by jinja.", "field_type": "core", "type": "boolean"}, "layout": {"default": null, "description": "Key of the layout, which is used to render the need.", "field_type": "core", "type": ["string", "null"]}, "lineno": {"default": null, "description": "Line number where the need is defined (None if external).", "field_type": "core", "type": ["integer", "null"]}, "links": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "links_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "max_amount": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "max_content_lines": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "modifications": {"default": 0, "description": "Number of modifications by needextend.", "field_type": "core", "type": "integer"}, "params": {"default": "", "description": "Added by service open-needs", "field_type": "extra", "type": "string"}, "parent_need": {"default": "", "description": "Simply the first parent id.", "field_type": "core", "type": "string"}, "parent_needs": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "parent_needs_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "parts": {"additionalProperties": {"type": "object"}, "default": {}, "description": "Mapping of parts, a.k.a. sub-needs, IDs to data that overrides the need's data", "field_type": "core", "type": "object"}, "post_content": {"default": "", "description": "Post-content of the need.", "field_type": "core", "type": "string"}, "post_template": {"default": null, "description": "Post-template of the need.", "field_type": "core", "type": ["string", "null"]}, "pre_content": {"default": "", "description": "Pre-content of the need.", "field_type": "core", "type": "string"}, "pre_template": {"default": null, "description": "Pre-template of the need.", "field_type": "core", "type": ["string", "null"]}, "prefix": {"default": "", "description": "Added by service open-needs", "field_type": "extra", "type": "string"}, "query": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "recommendation": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "release": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "scope": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "section_name": {"default": "", "description": "Simply the first section.", "field_type": "core", "type": "string"}, "sections": {"default": [], "description": "Sections of the need.", "field_type": "core", "items": {"type": "string"}, "type": "array"}, "service": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "signature": {"default": "", "description": "Derived from a docutils desc_name node.", "field_type": "core", "type": "string"}, "specific": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "status": {"default": null, "description": "Status of the need.", "field_type": "core", "type": ["string", "null"]}, "style": {"default": null, "description": "Comma-separated list of CSS classes (all appended by `needs_style_`).", "field_type": "core", "type": ["string", "null"]}, "tags": {"default": [], "description": "List of tags.", "field_type": "core", "items": {"type": "string"}, "type": "array"}, "template": {"default": null, "description": "Template of the need.", "field_type": "core", "type": ["string", "null"]}, "title": {"description": "Title of the need.", "field_type": "core", "type": "string"}, "type": {"default": "", "description": "Type of the need.", "field_type": "core", "type": "string"}, "type_name": {"default": "", "description": "Name of the type.", "field_type": "core", "type": "string"}, "updated_at": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "url": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "url_postfix": {"default": "", "description": "Added by service open-needs", "field_type": "extra", "type": "string"}, "user": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}}, "type": "object"}}}}